{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import ReactModal from'react-modal';import'./WaitingRoom.css';var WaittingRoom=/*#__PURE__*/function(_React$Component){_inherits(WaittingRoom,_React$Component);function WaittingRoom(props){var _this;_classCallCheck(this,WaittingRoom);_this=_possibleConstructorReturn(this,_getPrototypeOf(WaittingRoom).call(this,props));_this.readySocket=function(){_this.socket.on('ChannelList',function(recv){if(!_this._ismounted){return;}_this.setState({channelList:recv.GameRoomList});});_this.socket.on('WaitingChattingResponse',function(recv){if(!_this._ismounted){return;}_this.setState({messageList:_this.state.messageList.concat({nickname:recv.nickname,message:recv.message})});});_this.socket.on('Result',function(recv){if(recv.type==='Entry'){if(recv.result==='FULL'){alert('꽉 차있습니다.');}else if(recv.result==='Invalid'){alert('존재하지 않는 방입니다.');}}});};_this.cleanUpSocket=function(){_this.socket.off('ChannelList',function(){});_this.socket.off('WaitingChattingResponse',function(){});};_this.EnterRoom=function(roomid){_this.socket.emit('RequestEnterRoom',{roomid:roomid});};_this.ReloadChannelList=function(){_this.socket.emit('RequestRoomList','');};_this.CreateRoomButton=function(){_this.setState({modalState:true});};_this.CreateRoomRequest=function(){if(_this.roomName.current.value.length===0){alert('방의 제목을 입력해야합니다');return;}_this.socket.emit('RequestRoomCreate',{title:_this.roomName.current.value});_this.roomName.current.value='';};_this.CloseModal=function(){_this.roomName.current.value='';_this.setState({modalState:false});};_this.sendMessage=function(message){_this.socket.emit('WaitingChatting',{message:message});_this.msgInput.current.value='';};_this.state={channelList:[],messageList:[],modalState:false};_this.socket=_this.props.socket;_this.msgInput=React.createRef();_this.roomName=React.createRef();return _this;}_createClass(WaittingRoom,[{key:\"componentDidMount\",value:function componentDidMount(){this._ismounted=true;this.readySocket();this.ReloadChannelList();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._ismounted=false;this.cleanUpSocket();}},{key:\"render\",value:function render(){var _this2=this;var listArray=this.state.channelList;var renderList=[];var _loop=function _loop(i){renderList.push(React.createElement(\"tr\",{className:\"room btn\",onClick:function onClick(){return _this2.EnterRoom(listArray[i].roomid);},key:i+10},React.createElement(\"td\",{id:\"num\"},listArray[i].roomNumber),React.createElement(\"td\",{id:\"roomName\"},listArray[i].roomName),React.createElement(\"td\",{id:\"member\"},React.createElement(\"span\",null,listArray[i].member.length),\"/2\"),React.createElement(\"td\",{id:\"state\"},React.createElement(\"span\",{className:listArray[i].state==='Playing'?'playing':''},listArray[i].state==='Playing'?'진행':'대기 '))));};for(var i=0;i<listArray.length;++i){_loop(i);}var messageList=this.state.messageList;var messageRenderList=[];for(var _i=0;_i<messageList.length;++_i){messageRenderList.push(React.createElement(\"li\",{key:_i},React.createElement(\"span\",{id:\"nickname\"},messageList[_i].nickname,\":\"),React.createElement(\"p\",{id:\"message\"},messageList[_i].message)));}return React.createElement(\"div\",{id:\"omokbody\"},React.createElement(ReactModal,{id:\"modalbody\",isOpen:this.state.modalState,contentLabel:\"Minimal Modal Example\",ariaHideApp:false},React.createElement(\"label\",null,\"\\uBC29\\uC81C\\uBAA9\"),React.createElement(\"input\",{type:\"text\",ref:this.roomName}),React.createElement(\"br\",null),React.createElement(\"button\",{id:\"roomMake\",onClick:function onClick(){_this2.CreateRoomRequest();}},\"\\uB9CC\\uB4E4\\uAE30\"),React.createElement(\"button\",{id:\"roomCancel\",onClick:function onClick(){_this2.CloseModal();}},\"\\uCDE8\\uC18C\")),React.createElement(\"div\",{id:\"channelList\"},React.createElement(\"table\",null,React.createElement(\"thead\",{className:\"listHead\"},React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"cols\"},\"\\uBC29\\uBC88\\uD638\"),React.createElement(\"th\",{scope:\"cols\"},\"\\uBC29\\uC81C\\uBAA9\"),React.createElement(\"th\",{scope:\"cols\"},\"\\uC778\\uC6D0\"),React.createElement(\"th\",{scope:\"cols\"},\"\\uC0C1\\uD0DC\"))),React.createElement(\"tbody\",{className:\"listRoom\"},renderList))),React.createElement(\"div\",{id:\"ChatList\"},React.createElement(\"ul\",null,messageRenderList),React.createElement(\"input\",{type:\"text\",placeholder:\"chatting\",ref:this.msgInput}),React.createElement(\"button\",{onClick:function onClick(){_this2.sendMessage(_this2.msgInput.current.value);},id:\"sendMessage\"},\"\\uC804\\uC1A1\")),React.createElement(\"div\",{id:\"listBtn\"},React.createElement(\"button\",{onClick:function onClick(){return _this2.CreateRoomButton();},id:\"create\"},\"\\uBC29\\uC0DD\\uC131\"),React.createElement(\"button\",{onClick:function onClick(){return _this2.ReloadChannelList();},id:\"reload\"},\"\\uC0C8\\uB85C\\uACE0\\uCE68\")));}}]);return WaittingRoom;}(React.Component);export default WaittingRoom;","map":{"version":3,"sources":["C:/Users/kihey/Desktop/새 폴더 (3)/2ndProj-Omok/omok/src/WaittingRoom.js"],"names":["React","ReactModal","WaittingRoom","props","readySocket","socket","on","recv","_ismounted","setState","channelList","GameRoomList","messageList","state","concat","nickname","message","type","result","alert","cleanUpSocket","off","EnterRoom","roomid","emit","ReloadChannelList","CreateRoomButton","modalState","CreateRoomRequest","roomName","current","value","length","title","CloseModal","sendMessage","msgInput","createRef","listArray","renderList","i","push","roomNumber","member","messageRenderList","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactModal from 'react-modal';\r\nimport './WaitingRoom.css';\r\n\r\nclass WaittingRoom extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={channelList:[], messageList:[], modalState:false};\r\n        this.socket = this.props.socket;\r\n        this.msgInput = React.createRef();\r\n        this.roomName = React.createRef();\r\n    }\r\n    \r\n    componentDidMount() { \r\n        this._ismounted = true;\r\n        this.readySocket();\r\n        this.ReloadChannelList();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._ismounted = false;\r\n        this.cleanUpSocket();\r\n    }\r\n\r\n    readySocket = ()=>{\r\n        this.socket.on('ChannelList',(recv)=>{\r\n            if(!this._ismounted){\r\n                return;\r\n            }\r\n\r\n            this.setState({channelList:recv.GameRoomList});\r\n        });\r\n\r\n        this.socket.on('WaitingChattingResponse',(recv)=>{\r\n            if(!this._ismounted){\r\n                return;\r\n            }\r\n\r\n            this.setState({messageList: this.state.messageList.concat({nickname:recv.nickname, message:recv.message})}); \r\n        })\r\n\r\n        this.socket.on('Result',(recv)=>{\r\n            if(recv.type === 'Entry'){\r\n                if(recv.result === 'FULL'){\r\n                    alert('꽉 차있습니다.')\r\n                }else if(recv.result === 'Invalid'){\r\n                    alert('존재하지 않는 방입니다.');\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    cleanUpSocket = ()=>{\r\n        this.socket.off('ChannelList',()=>{});\r\n        this.socket.off('WaitingChattingResponse',()=>{});\r\n    }\r\n\r\n    EnterRoom = (roomid) =>{\r\n        this.socket.emit('RequestEnterRoom',{roomid:roomid});\r\n    }\r\n\r\n    ReloadChannelList = ()=>{\r\n        this.socket.emit('RequestRoomList','');\r\n    }\r\n\r\n    CreateRoomButton = ()=>{\r\n       this.setState({modalState:true});\r\n    }\r\n\r\n    CreateRoomRequest = ()=>{\r\n        if(this.roomName.current.value.length === 0){\r\n            alert('방의 제목을 입력해야합니다');\r\n            return;\r\n        }\r\n        this.socket.emit('RequestRoomCreate',{title:this.roomName.current.value});\r\n        this.roomName.current.value= '';\r\n    }\r\n\r\n    CloseModal = ()=>{\r\n        this.roomName.current.value= '';\r\n        this.setState({modalState:false});\r\n    }\r\n\r\n    sendMessage = (message)=>{\r\n        this.socket.emit('WaitingChatting',{message:message});\r\n        this.msgInput.current.value ='';\r\n    }\r\n\r\n    render(){\r\n        let listArray = this.state.channelList;\r\n        let renderList = [];\r\n        for(let i=0 ; i<listArray.length ; ++i){\r\n            renderList.push(\r\n                <tr className=\"room btn\" onClick={()=>this.EnterRoom(listArray[i].roomid)} key={i+10}>{/*<!-- 채널 방 (기본 클래스명은 'room btn'(2개), 추가 클래스는 'no1','no2','no3'...)  -->*/}\r\n                    <td id=\"num\">{listArray[i].roomNumber}</td>\r\n                    <td id=\"roomName\">{listArray[i].roomName}</td>\r\n                    <td id=\"member\"><span>{listArray[i].member.length}</span>/2</td>\r\n                    <td id=\"state\"><span className= {listArray[i].state === 'Playing' ? 'playing': ''}>{listArray[i].state === 'Playing' ? '진행': '대기 '}</span></td>\r\n                </tr>\r\n            )\r\n        }\r\n        \r\n        let messageList = this.state.messageList;\r\n        let messageRenderList = []; \r\n        for(let i=0;i<messageList.length;++i){\r\n            messageRenderList.push(\r\n                <li key={i}>{/*<!-- 채팅 메세지 -->*/}\r\n                    <span id=\"nickname\">{messageList[i].nickname}:</span>\r\n                    <p id=\"message\">{messageList[i].message}</p>\r\n                </li>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div id=\"omokbody\">\r\n                <ReactModal id = 'modalbody'\r\n                    isOpen={this.state.modalState}\r\n                    contentLabel=\"Minimal Modal Example\"\r\n                    ariaHideApp={false}\r\n                >\r\n                    <label>방제목</label><input type=\"text\" ref={this.roomName}/><br/>\r\n                    <button id=\"roomMake\" onClick={()=>{this.CreateRoomRequest()}}>만들기</button>\r\n                    <button id=\"roomCancel\" onClick={()=>{this.CloseModal()}}>취소</button>\r\n                </ReactModal>\r\n\r\n                <div id = 'channelList'>{/*<!-- 채널 목록  -->*/}\r\n                    <table>\r\n                        <thead className=\"listHead\">{/*<!-- 목록 별 제목  -->*/}\r\n                            <tr>\r\n                                <th scope=\"cols\">방번호</th>\r\n                                <th scope=\"cols\">방제목</th>\r\n                                <th scope=\"cols\">인원</th>\r\n                                <th scope=\"cols\">상태</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"listRoom\">\r\n                        {renderList}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id = 'ChatList'>{/*<!-- 채팅 목록  -->*/}\r\n                    <ul>\r\n                        {messageRenderList}\r\n                    </ul>\r\n                    <input type='text' placeholder='chatting' ref={this.msgInput}></input>{/*<!-- 채팅 입력 칸 -->*/}\r\n                    <button onClick={()=>{this.sendMessage(this.msgInput.current.value)}} id=\"sendMessage\">전송</button>{/*<!-- 채팅 전송 버튼 -->*/}\r\n                </div>\r\n                <div id=\"listBtn\">\r\n                    <button onClick={()=>this.CreateRoomButton()} id=\"create\">방생성</button>\r\n                    <button onClick={()=>this.ReloadChannelList()} id=\"reload\">새로고침</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WaittingRoom;"]},"metadata":{},"sourceType":"module"}