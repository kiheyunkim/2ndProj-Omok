{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\kihey\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import Stone from'./Stone';import React from'react';import\"./GameRoom.css\";var GameRoom=/*#__PURE__*/function(_React$Component){_inherits(GameRoom,_React$Component);//각 개인이 접속되어 보이는 창\nfunction GameRoom(props){var _this;_classCallCheck(this,GameRoom);//소켓처리 -> 팀 할당받아야함\n_this=_possibleConstructorReturn(this,_getPrototypeOf(GameRoom).call(this,props));_this.ReadySocket=function(){_this.socket.on('GameInitialization',function(recv){if(!_this._ismounted){return;}_this.isMyTurn=recv.isYourTurn?1:2;_this.setState({team:recv.color,turn:recv.isYourTurn});});_this.socket.on('PlaceResult',function(recv){if(recv.Result==='WrongPos'){if(!_this._ismounted){return;}alert('잘못된 위치입니다.');_this.isMyTurn=1;}else if(recv.Result==='YourTurn'){_this.isMyTurn=1;_this.setState({turn:true});}else if(recv.Result==='PlaceOK'){_this.setState({turn:false});}});_this.socket.on('PlayResult',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(recv){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(_this._ismounted){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(recv.result==='Victory'){alert('승리하였습니다');_this.socket.emit('CheckResult','');}else if(recv.result==='Defeat'){alert('패배하였습니다');_this.socket.emit('CheckResult','');}case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());_this.socket.on('PlaceStone',function(recv){if(!_this._ismounted){return;}var board=_this.state.board;board[recv.xPos+20*recv.yPos]=recv.team;_this.setState({board:board});});_this.socket.on('roomMessage',function(recv){_this.setState({message:_this.state.message.concat({nickname:recv.nickname,message:recv.message})});});};_this.ClickStone=function(x,y){if(_this.isMyTurn!==1){alert('당신의 턴이 아닙니다');return;}_this.isMyTurn=2;//이 함수가 호출 되었다는 것은 돌이 놓으려는 시도를 했다는 것. 잠금\n_this.socket.emit('StonePlace',{xPos:x,yPos:y});//서버에 돌 놓기/ 상대에게 돌전달/ 승리 체크 요청함.\n};_this.sendMessage=function(){//아이디 추가\n_this.socket.emit('GameRoomChatting',{message:_this.msgInput.current.value});_this.msgInput.current.value='';};_this.socket=_this.props.socket;_this.isMyTurn=0;//0은 시작안함, 1은 자기턴, 2는 대기중\n_this.msgInput=React.createRef();_this.ReadySocket();_this.socket.emit('RequestGameSetting','');var _board=[];for(var i=0;i<20;++i){for(var j=0;j<20;++j){_board.push(0);}}_this.state={team:'blank',board:_board,message:[],turn:false};return _this;}_createClass(GameRoom,[{key:\"componentDidMount\",value:function componentDidMount(){this._ismounted=true;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._ismounted=false;}},{key:\"render\",value:function render(){var _this2=this;var boardRenderList=[];for(var i=0;i<20;++i){var rowStones=[];for(var j=0;j<20;++j){var type='blank';if(this.state.board[j+i*20]===1){type='black';}else if(this.state.board[j+i*20]===2){type='white';}rowStones.push(React.createElement(\"td\",{id:\"stones\",key:j+i*20},React.createElement(Stone,{xPos:j,yPos:i,color:type,click:this.ClickStone})));}boardRenderList.push(React.createElement(\"tr\",{key:i+400},rowStones));}var messageRenderList=[];var messages=this.state.message;for(var _i=0;_i<messages.length;++_i){messageRenderList.push(React.createElement(\"li\",{key:_i},React.createElement(\"span\",{id:\"nickname\"},messages[_i].nickname,\":\"),React.createElement(\"p\",{id:\"message\"},messages[_i].message)));}return React.createElement(\"div\",{id:\"gameArea\"},React.createElement(\"table\",{id:\"omokBoard\",cellSpacing:\"0\",cellPadding:\"0\"},React.createElement(\"tbody\",null,boardRenderList)),React.createElement(\"div\",{id:\"gameChatList\"},React.createElement(\"ul\",null,messageRenderList),React.createElement(\"input\",{type:\"text\",placeholder:\"chatting\",ref:this.msgInput}),React.createElement(\"button\",{id:\"sendMessage\",onClick:function onClick(){_this2.sendMessage();}},\"\\uC804\\uC1A1\")),React.createElement(\"div\",{id:\"snack\",className:!this.state.turn?'snackOp':''},React.createElement(\"span\",null,\"\\uB2F9\\uC2E0\\uC758 \\uCC28\\uB840\\uC785\\uB2C8\\uB2E4.\")));}}]);return GameRoom;}(React.Component);export default GameRoom;","map":{"version":3,"sources":["C:/Users/kihey/Desktop/새 폴더 (3)/2ndProj-Omok/omok/src/GameRoom.js"],"names":["Stone","React","GameRoom","props","ReadySocket","socket","on","recv","_ismounted","isMyTurn","isYourTurn","setState","team","color","turn","Result","alert","result","emit","board","state","xPos","yPos","message","concat","nickname","ClickStone","x","y","sendMessage","msgInput","current","value","createRef","i","j","push","boardRenderList","rowStones","type","messageRenderList","messages","length","Component"],"mappings":"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","sourcesContent":["import Stone from './Stone';\r\nimport React from 'react';\r\nimport \"./GameRoom.css\";\r\n\r\nclass GameRoom extends React.Component{ //각 개인이 접속되어 보이는 창\r\n    constructor(props){     //소켓처리 -> 팀 할당받아야함\r\n        super(props);\r\n        this.socket = this.props.socket;\r\n        this.isMyTurn = 0;//0은 시작안함, 1은 자기턴, 2는 대기중\r\n\r\n        this.msgInput = React.createRef();\r\n        \r\n        this.ReadySocket();\r\n        this.socket.emit('RequestGameSetting','');\r\n\r\n        let board = [];\r\n        for(let i=0;i<20;++i){\r\n            for(let j=0;j<20;++j){\r\n                board.push(0);\r\n            }\r\n        }\r\n    \r\n        this.state = {team:'blank', board:board, message:[], turn:false};\r\n    }\r\n\r\n    componentDidMount() { \r\n        this._ismounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._ismounted = false;\r\n    }\r\n\r\n    ReadySocket = ()=>{\r\n        this.socket.on('GameInitialization',(recv)=>{\r\n            if(!this._ismounted){\r\n                return;\r\n            }\r\n            this.isMyTurn = recv.isYourTurn ? 1 : 2;\r\n            this.setState({team:recv.color,turn:recv.isYourTurn});\r\n        });\r\n\r\n        this.socket.on('PlaceResult',(recv)=>{\r\n            if(recv.Result === 'WrongPos'){\r\n                if(!this._ismounted){\r\n                    return;\r\n                }\r\n                alert('잘못된 위치입니다.');\r\n                this.isMyTurn = 1;\r\n            }else if(recv.Result === 'YourTurn'){\r\n                this.isMyTurn = 1;\r\n                this.setState({turn:true})\r\n            }else if(recv.Result === 'PlaceOK'){\r\n                this.setState({turn:false})\r\n            }\r\n        })\r\n\r\n        this.socket.on('PlayResult', async (recv)=>{\r\n            if(!this._ismounted){\r\n                return;\r\n            }\r\n\r\n            if(recv.result === 'Victory'){\r\n                alert('승리하였습니다');\r\n                this.socket.emit('CheckResult','');\r\n            }else if(recv.result === 'Defeat'){\r\n                alert('패배하였습니다');\r\n                this.socket.emit('CheckResult','');        \r\n            }\r\n        });\r\n\r\n        this.socket.on('PlaceStone',(recv)=>{\r\n            if(!this._ismounted){\r\n                return;\r\n            }\r\n            let board = this.state.board;\r\n            board[recv.xPos + 20 * recv.yPos] = recv.team;\r\n            this.setState({board:board});\r\n        });\r\n\r\n        this.socket.on('roomMessage',(recv)=>{\r\n            this.setState({message: this.state.message.concat({nickname:recv.nickname, message:recv.message})});\r\n        })\r\n    }\r\n\r\n    ClickStone = (x, y)=>{\r\n        if(this.isMyTurn !== 1){\r\n            alert('당신의 턴이 아닙니다');\r\n            return;\r\n        }\r\n\r\n        this.isMyTurn = 2;  //이 함수가 호출 되었다는 것은 돌이 놓으려는 시도를 했다는 것. 잠금\r\n\r\n        this.socket.emit('StonePlace',{xPos:x, yPos:y});    //서버에 돌 놓기/ 상대에게 돌전달/ 승리 체크 요청함.\r\n    }\r\n    \r\n    sendMessage = ()=>{//아이디 추가\r\n        this.socket.emit('GameRoomChatting',{message:this.msgInput.current.value});\r\n        this.msgInput.current.value ='';\r\n    }\r\n\r\n    render(){\r\n        let boardRenderList = [];\r\n        for(let i=0;i<20;++i){\r\n            let rowStones =[];\r\n            for(let j=0;j<20;++j){\r\n                let type = 'blank';\r\n                if(this.state.board[j + i*20] === 1){\r\n                    type = 'black';\r\n                }else if(this.state.board[j + i*20] === 2){\r\n                    type = 'white';\r\n                }\r\n\r\n                rowStones.push(\r\n                    <td id = 'stones' key ={j+(i*20)}><Stone xPos = {j} yPos = {i} color = {type} click ={this.ClickStone}/></td>\r\n                );\r\n            }\r\n\r\n            boardRenderList.push(\r\n                <tr key ={i+400}>\r\n                    {rowStones}\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        let messageRenderList = [];\r\n        let messages = this.state.message;\r\n        for(let i=0;i<messages.length;++i){\r\n            messageRenderList.push(\r\n                <li key={i}>{/*<!-- 채팅 메세지 -->*/}\r\n                    <span id=\"nickname\">{messages[i].nickname}:</span>\r\n                    <p id=\"message\">{messages[i].message}</p>\r\n                </li>\r\n            );\r\n        }\r\n \r\n        return(\r\n            <div id =\"gameArea\">\r\n                <table id ='omokBoard' cellSpacing=\"0\" cellPadding=\"0\">\r\n                    <tbody>\r\n                        {boardRenderList}\r\n                    </tbody>\r\n                </table>\r\n                <div id = 'gameChatList'>{/*<!-- 채팅 목록  -->*/}\r\n\t\t            <ul>\r\n\t\t                {messageRenderList}\r\n\t\t            </ul>\r\n\t\t            <input type='text' placeholder='chatting' ref={this.msgInput}></input>{/*<!-- 채팅 입력 칸 --><!-- \r\n\t\t         -->*/}<button id=\"sendMessage\" onClick ={()=>{this.sendMessage()}}>전송</button>{/*<!-- 채팅 전송 버튼 -->*/}\r\n\t\t        </div>\r\n\t\t        <div id='snack' className={(!this.state.turn ? 'snackOp' : '')}>{/*<!-- 순서가 찾아올 때 나타나는 문구 -->*/}\r\n\t\t        \t<span>당신의 차례입니다.</span>\r\n\t\t        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameRoom;"]},"metadata":{},"sourceType":"module"}